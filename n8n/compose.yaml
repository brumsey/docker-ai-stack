x-shared: &a1
  restart: unless-stopped
  image: docker.n8n.io/n8nio/n8n:next
  networks:
    - n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_EDITOR_BASE_URL=${N8N_URL}
    - N8N_HOST=${N8N_HOST}
    - N8N_SECURE_COOKIE=true
    - N8N_PROTOCOL=https
    - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
    - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY}
    - N8N_EMAIL_MODE=smtp
    - N8N_SMTP_HOST=${SMTP_HOST}
    - N8N_SMTP_PORT=${SMTP_PORT}
    - N8N_SMTP_USER=${SMTP_USER}
    - N8N_SMTP_PASS=${SMTP_PASS}
    - N8N_SMTP_SENDER=${SMTP_SENDER}
    - N8N_SMTP_SSL=false
    - N8N_USER_MANAGEMENT_DISABLED=false
    - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
    - N8N_RUNNERS_ENABLED=true
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
  #   - MCP_SERVER_URL=${MCP_SERVER_URL}
  #   - MCP_SERVER_TOKEN=${MCP_SERVER_TOKEN}
  links:
    - postgres
    - redis
  volumes:
    - ./n8n_storage:/home/node/.n8n
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    networks:
      - n8n
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - ./db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 10
  redis:
    image: redis:6-alpine
    restart: unless-stopped
    networks:
      - n8n
    volumes:
      - ./redis_storage:/data
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 5s
      timeout: 5s
      retries: 10
  n8n:
    <<: *a1
    ports:
      - 5678:5678
  n8n-worker:
    <<: *a1
    command: worker
    depends_on:
      - n8n
  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks:
      - n8n
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - ./qdrant_storage:/qdrant/storage
networks:
  n8n:
    external: true
